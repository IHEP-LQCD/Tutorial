Linux笔记

◆常见Linux版本
红帽系：redhat、CentOS、SuSE、fedora、gentoo linux、红旗Linux、Mandriva、turbolinux
其他常见版本：ubuntu、debian、KNOPPIX

◆设备文件名
------常见设备------
/dev/hda      IDE硬盘
/dev/hdb      IDE硬盘
/dev/hdc      IDE硬盘
/dev/hdd      IDE硬盘
/dev/sda      SCSI/SATA/USB硬盘
/dev/sdb      SCSI/SATA/USB硬盘
/dev/sdc      SCSI/SATA/USB硬盘
......
/dev/sdp      SCSI/SATA/USB硬盘
/dev/cdrom    光驱
/dev/sr0      光驱
/dev/fd0      软盘
/dev/fd1      软盘
/dev/lp0      25针打印机
/dev/lp1      25针打印机
/dev/lp2      25针打印机
/dev/usb/lp0  USB打印机
/dev/usb/lp1  USB打印机
/dev/usb/lp2  USB打印机
......
/dev/usb/lp15 USB打印机
/dev/mouse    鼠标
------硬盘分区------
/dev/hda1     IDE硬盘主分区接口
/dev/hda2     IDE硬盘主分区/扩展分区接口
/dev/hda3     IDE硬盘主分区/扩展分区接口
/dev/hda4     IDE硬盘主分区/扩展分区接口
/dev/hda5     IDE硬盘逻辑分区接口
/dev/hda6     IDE硬盘逻辑分区接口
/dev/hda7     IDE硬盘逻辑分区接口
......
把硬盘分区的设备文件名中的/dev/hda换成任何一块硬盘的设备文件名，即表示该硬盘的分区接口。现今IDE硬盘已经很少见（过时了），/dev/sd系列的SATA硬盘是目前市面上最常见的硬盘。
分区编号规则：主分区/扩展分区共用1、2、3、4（对于同一块硬盘，二者合计最多4个）。主分区用于写入数据，扩展分区只用于包含逻辑分区，一块硬盘上只能有最多1个扩展分区。逻辑分区的编号从5开始，逻辑分区可以行使和主分区相同的功能。（逻辑分区的编号一定从5开始，如果某一块硬盘上只有2个主分区和3个逻辑分区，那么这块硬盘的分区编号1、2是主分区，5、6、7是逻辑分区，3是包含这些逻辑分区的扩展分区，没有4。）

◆命令格式
cmd opt param
cmd：命令名称。
opt：选项。-后跟选项简称，--后跟选项全称。多个选项同时启用，-后跟上各个选项简称即可，也可以分开写。（例如，同时启用a、b、c、d四个选项，可以写成-abcd，也可以写-a -b -c -d。也可以写-acdb，因为大部分选项次序与实际效果无关。）
param：参数。一般是指命令的作用对象。
opt可以为空，param一般不为空。
opt可以为--help，此时显示cmd命令的常用选项列表。

◆路径格式
/   根目录。/前面没有任何字符才表示根目录，否则/为目录与其下的文件（或者下一级目录）之间的分隔符。
.   当前目录
..  上一级目录
~   宿主目录
绝对路径必须从根目录开始，相对路径只能从当前目录开始。相对路径就是以./为起点的绝对路径，只不过./可以省略。
用户名为xxx的宿主目录为/home/xxx，管理员的宿主目录为/root。
作为param的文件（可以是目录）是指该文件的路径（可以是相对路径），作为param的设备或硬盘分区是指该设备或硬盘分区的设备文件名。

◆挂载卸载命令
mount   把param1设备挂载到param2目录。
        （param2目录称为param1设备的挂载点。）
-t      指定文件系统。若启用，则命令格式改为：mount -t param0 param1 param2。
        param0为文件系统名称。
        若不启用，则自动识别文件系统。
umount  卸载param设备。

◆文件处理命令
ls     显示param目录下的所有文件。（Linux的目录就是Windows的文件夹，但同时也是文件。）
       若param为空，则默认为当前目录。
-a     同时显示隐藏文件，若不启用则不显示隐藏文件（Linux中的隐藏文件就是以.开头的文件）。
-l     显示详细信息，若不启用则只显示文件名。启用时，param可以不是目录，此时显示param的详细信息。
-d     若同时启用-ld且param是目录，则显示param的详细信息。
-h     若同时启用-lh，则按最大单位显示size。若不启用，则默认单位是B。
-i     显示i节点编码。
ll     执行ls并启用-l。
mkdir  新建param目录。param可以有多个，此时分别新建多个目录。
-p     递归创建。若不启用则只能创建已有目录的下一级目录。
cd     切换当前目录。param为切换后的当前目录。若param为空，则默认为宿主目录。
pwd    显示当前目录。param需为空。
rmdir  删除param空目录。param可以有多个，此时分别删除多个空目录。
cp     复制param1文件到param2目录下。param1可以有多个，此时分别复制多个文件到param2目录下。
       若param1只有1个，param2可以为param2/new，此时复制param1文件到param2目录下并重命名为new。
-r     复制目录。若不启用，则param1不能为目录。
-p     同时复制详细信息。若不启用，则仅复制内容。
mv     移动param1文件（可以是目录）到param2目录下。param1可以有多个，此时分别移动多个文件到param2目录下。
       若param1只有1个，param2可以为param2/new，此时移动param1文件到param2目录下并重命名为new。
       若param1本来就在param2个目录下，则仅重命名。
rm     删除param文件。param可以有多个，此时分别删除多个文件。
-r     删除目录。若不启用，则param1不能为目录。
-f     强制执行。若不启用，可能会弹出确认信息。
touch  新建param文件。param可以有多个，此时分别创建多个文件。
cat    显示param文件内容。
-n     显示行号。
tac    显示param文件内容，按行倒序。
more   分页显示param文件内容。空格翻页，回车换行，Q键退出。
less   分页显示param文件内容。PageUp上一页，PageDown下一页，↑键上一行，↓键下一行。
       用/搜索关键词（输入/keyword按回车则搜索关键词keyword），按N键下一个。
head   显示param文件的前10行。
-n     若启用，则改为：显示param2文件的前param1行。
tail   显示param文件的后10行。
-n     若启用，则改为：显示param2文件的后param1行。
-f     打开监视模式。（此模式下可以实时查看是否有其他用户正在修改文件内容。）
ln     生成链接文件。默认执行：创建param1文件的硬链接param2。（param2需与param1处于同一分区。）
       （Linux的硬链接是源文件的复制，但与源文件共享i节点。）
-s     若启用，则改为：创建param1文件（可以是目录）的软链接param2。
       （Linux的软链接就是Windows的快捷方式，但同时也是文件。）
------详细信息------
total：总用量
typemode. count owner group size month date time filename
typemode：       文件类型与访问权限。
count：          引用计数。
owner：          所有者。
group：          所属组。
size：           文件大小。默认单位是B。
month/date/time：最后修改时间（月/日/时分）。
filename：       文件名。
------文件类型------
文件类型显示在typemode的第1位。
-  普通文件（二进制文件）
d  目录
l  软链接
------访问权限------
访问权限显示在typemode的后9位。其中前3位是owner的权限，中间3位是group的权限，后3位是others的权限（不是owner也不属于group的用户通称others）。
r  读取权限。文件的读取权限可以查看文件内容。目录的读取权限可以查看该目录下的文件名及其详细信息。
w  写入权限。文件的写入权限可以修改文件内容。目录的写入权限可以创建/删除/移动该目录下的文件。
x  执行权限。文件的执行权限可以执行文件。目录的执行权限可以进入该目录（包括切换当前目录到该目录、修改该目录下的文件权限等）。
-  占位符

◆权限管理命令
chmod  修改param2文件（可以是目录）的权限为param1，param1可以是ugo或者bin格式。
-R     递归修改。若启用且param2是目录，则同时修改该目录下所有文件的权限，但无法取消该目录下的文件的执行权限。
chown  修改param2文件（可以是目录）的所有者为param1，param1为用户名。
chgrp  修改param2文件（可以是目录）的所属组为param1，param1为所属组名称。
       （每个用户都有一个默认的所属组，这个所属组名称与该用户的用户名相同。）
umask  修改新建目录的默认权限，param为xor格式。
       若param为空，则改为执行：以四位数显示新建目录的当前默认权限，其中后3位为xor格式。
       若param不为空，则同时修改新建文件的默认权限，但无论如何不会给新建文件设置默认的执行权限。
-S     以ugo格式显示新建目录的当前默认权限，param需为空。
------ugo格式------
u  所有者
g  所属组
o  其他人（不是所有者也不属于所属组的用户）
+  添加权限
-  取消权限
=  设置权限
r  读取权限
w  写入权限
x  执行权限
例如：u+x表示给所有者添加执行权限，g-wx表示取消所属组的写入权限和执行权限，o=rw表示把其他人的权限设置为rw-。
------bin格式------
在二进制下，x=001，w=010，r=100。求和并按照ugo的顺序表示即可。
例如：rwxrwxrwx=777，rw-r--r--=644。
------xor格式------
xor格式即为求777与bin格式的异或。

◆文件搜索命令
find     在param0目录下搜索满足param1条件的文件。
         命令格式为：find param0 opt param1。
-name    若启用，则param1为文件名。
-iname   启用-name，但不区分大小写。
-size    若启用，则param1为文件大小，按数据块格式。可以使用前置字符+或-来表示大于或小于。
-type    若启用，则param1为文件类型。用f表示普通文件（二进制文件），d表示目录，l表示软链接。
-user    若启用，则param1为文件的所有者。
-group   若启用，则param1为文件的所属组。
-amin    若启用，则param1为文件的最后访问时间距离此刻的分钟数。可以使用前置字符+或-来表示大于或小于。
-cmin    若启用，则param1为文件属性的最后更新时间距离此刻的分钟数。可以使用前置字符+或-来表示大于或小于。
-mmin    若启用，则param1为文件内容的最后修改时间距离此刻的分钟数。可以使用前置字符+或-来表示大于或小于。
-inum    若启用，则param1为文件的i节点编码。
-a       若启用，则命令格式改为：find param0 opt1 param1 -a opt2 param2。
         执行改为：在param0目录下搜索同时满足param1和param1条件的文件，param1和param2的格式分别由opt1和opt2决定。
-o       若启用，则命令格式改为：find param0 opt1 param1 -o opt2 param2。
         执行改为：在param0目录下搜索满足param1和param2条件至少其一的文件，param1和param2的格式分别由opt1和opt2决定。
-exec    若启用，则命令格式改为：find param0 opt param1 -exec cmdline {} \;
         执行改为：在param0目录下搜索满足param1条件的文件，并对搜索到的文件执行cmdline。
         cmdline是完整的命令行，包含必要的cmd opt param。
-ok      若启用，则命令格式改为：find param0 opt param1 -ok cmdline {} \;
         执行改为：在param0目录下搜索满足param1条件的文件并弹出确认信息，确认后对搜索到的文件执行cmdline。
         cmdline是完整的命令行，包含必要的cmd opt param。
         -exec或-ok也可以与-a或-o同时启用，例如：find param0 opt1 param1 -o opt2 param2 -exec cmdline {} \;
locate   在资料库中搜索文件名为param的文件。
-i       不区分大小写。
updatedb 更新文件资料库。param需为空。
which    显示命令路径，同时显示命令别称（实际执行的alias）。param为命令名称。
whereis  显示命令路径或配置路径，同时显示命令或配置的帮助路径。param为命令名称或配置名称。
grep     在param2文件中搜索关键词param1所在行。
-i       不区分大小写。
-v       改为执行：在param2文件中搜索关键词param1所不在行。
------数据块格式------
文件大小的数据块格式即为文件的实际大小除以1个数据块的大小所得的比值。1个数据块的大小为512B。

◆帮助查询命令
man      查看命令或配置的帮助手册。param为命令名称或配置名称。
man 1    查看命令的帮助手册。param为命令名称。
man 5    查看配置的帮助手册。param为配置名称。
whatis   显示命令简介。param为命令名称。
apropos  显示配置简介。param为配置名称。
info     查看命令或配置的帮助手册，进入光标模式。param为命令名称或配置名称。
help     查看内置命令（无命令路径）的帮助信息。param为内置命令名称。

◆时间设置命令
date 修改系统时间为param。param为时间格式。若param为空，则改为执行：显示当前系统时间。
------时间格式------
MMDDhhmm[YYYY][.ss]
MM：  月份2位数。必需。
DD：  日期2位数。必需。
hh：  小时2位数。必需。
mm：  分钟2位数。必需。
YYYY：年份4位数。可选。
ss：  秒钟2位数。可选。

◆用户管理命令
useradd 新建用户。param为用户名。
passwd  设置或更改用户密码。param为用户名。若param为空，则默认为当前用户。
        若当前用户非管理员，则param需为空。
who     查看在线用户的登录记录。param需为空。
w       查看在线用户的详细记录。param需为空。
uptime  查看在线用户的详细记录，只显示第一行。param需为空。
------登录记录------
username term time (IP)
username：用户名。
term：    登录终端。tty开头表示本地终端，pts开头表示远程终端。
time：    登录时间。格式为：YYYY-MM-DD hh:mm。
IP：      远程终端的主机IP。
------详细记录------
systime up time, users, load average:
USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT
systime：     当前系统时间。
up time：     系统待机时间（从上一次服务器重启或关机到现在）。
users：       在线用户数量。
load average：分别显示系统在过去的1分钟内、5分钟内、15分钟内的均衡负载指数。
USER：        用户名。
TTY：         登录终端。tty开头表示本地终端，pts开头表示远程终端。
FROM：        登录终端的主机IP。-表示本机IP。
IDLE：        用户累计空闲时间。
JCPU：        用户累计占用的CPU时间。
PCPU：        用户当前执行的命令所占用的CPU时间。
WHAT：        用户当前执行的命令名称。-bash表示没有当前执行的命令。

◆压缩解压命令
gzip    把param文件压缩为.gz格式。
-d      若启用，则改为执行：解压param.gz文件。
gunzip  解压.gz格式的压缩文件。param为需要解压的文件。
tar     创建.tar格式的打包文件[或解包.tar格式的文件]。
-f      指定文件名。若启用（必须启用），则param1为打包后的文件名[或需要解包的.tar文件]。
-c      创建.tar格式的打包文件。若启用，则param2为需要打包的目录。
-x      解包.tar格式的打包文件。
-v      显示所有打包[或解包]成功的文件在打包前[或解包后]的路径。
-z      若启用，则改为执行：创建.tar格式的打包文件并压缩为.gz格式[或解压并解包.tar.gz格式的文件]。
-j      若启用，则改为执行：创建.tar格式的打包文件并压缩为.bz2格式[或解压并解包.tar.bz2格式的文件]。
zip     创建.zip格式的压缩文件，并显示压缩比。param1为压缩后的文件名，param2为需要压缩的文件。
-r      压缩目录。若不启用，则param2不能为目录。
unzip   解压.zip格式的压缩文件。param为需要解压的文件。
bzip2   把param文件压缩为.bz2格式。
-k      保留压缩前的文件。
bunzip2 解压.bz2格式的压缩文件。param为需要解压的文件。
-k      保留解压前的.bz2文件。

◆网络命令
write      给在线用户发送即时通讯。param为收信人用户名。
           回车开始输入通讯内容，Ctrl+D保存并发送。
wall       给所有在线用户发送即时广播。param为广播内容。
ping       测试网络。param为请求包收件人IP。
           Ctrl+C结束测试。
-c         若启用，则param2为请求包收件人IP，param1为请求包发送次数。
ifconfig   给网卡设置IP。param1为网卡名称，param2为设置的IP。
           若param为空，则改为执行：查看当前网卡信息。
mail       给用户发送电子邮件。param为收件人用户名。
           回车开始输入邮件内容，Ctrl+D保存并发送。
           若param为空，则改为执行：进入当前用户的电子邮箱。
last       显示所有用户的在线记录以及服务器的重启记录。param需为空。
id         显示用户的uid。param为用户名。
lastlog    显示所有用户列表及其最后登录时间。param需为空。
-u         若启用，则改为执行：显示某用户的用户列表及其最后登录时间。param为用户的uid。
traceroute 发送数据包并跟踪。param为接受数据包的网址。
netstat    查看当前网络信息。
-t         查看TCP协议的当前网络信息。
-u         查看UDP协议的当前网络信息。
-a         查看本机的所有当前网络信息。
-l         查看本机当前监听的网络信息。
-r         查看本机当前路由的网络信息。
-n         查看IP和端口。
           常用组合：-tlun查看本机当前监听的端口；-an查看本机的所有当前网络连接；-rn查看本机当前路由表。
setup      进入网络配置图形界面。
nmtui      进入网络配置图形界面。
------电子邮箱------
邮件列表中>N开头的邮件是新邮件（未读）。
输入help按回车可查看电子邮箱内可用的命令列表。
输入邮件编号按回车可查看该邮件的内容。
输入h按回车可回到邮件列表。
输入d按空格并输入邮件编号按回车可删除该邮件。
输入q按回车可退出电子邮箱。
------在线记录------
username term IP Sun month date timein - timeout (span)
username：           用户名。
term：               登录终端。tty开头表示本地终端，pts开头表示远程终端。
IP：                 远程终端的主机IP。
Sun month date：     登录日期（星期 月 日）。
timein - timeout：   登陆时间 - 登出时间。
span                 在线时长。
------用户列表------
username term IP lastlogtime
username：    用户名。
term：        登录终端。tty开头表示本地终端，pts开头表示远程终端。
IP：          远程终端的主机IP。
lastlogtime： 最后登录时间（星期 月 日 时:分:秒 时区 年）。

◆关机重启命令
shutdown   执行关机或重启命令。param为执行时间，格式为hh:mm或now。
-h         执行关机命令。
-r         执行重启命令。
-c         取消前一个还未执行的关机命令。
halt       立即关机。param需为空。
reboot     立即重启。param需为空。
poweroff   立即断电。param需为空。
init 0     立即关机。param需为空。
init 6     立即重启。param需为空。

◆运行级别命令
init 1   切换至单用户模式（安全模式）。param需为空。
init 2   切换至多用户模式，禁用NFS服务。param需为空。
init 3   切换至多用户模式，开启NFS服务。param需为空。
init 5   切换至图形界面运行模式。param需为空。
runlevel 显示之前运行级别以及当前运行级别。param需为空。
         空格右边数字表示当前运行级别。
         空格左边数字表示之前运行级别。若为N则表示未切换过运行级别。

◆登出命令
logout  登出当前用户。param需为空。
        Ctrl+D快捷键执行logout。

◆Vim文本编辑器
vi  用Vim文本编辑器打开param文件。
    若param为不存在的文件，则改为执行：新建param文件并用Vim文本编辑器打开。
   （下文的616/639为举例之用，可换为任意正整数。）
------内部命令------
↑     向上移动光标。
↓     向下移动光标。
←     向左移动光标。
→     向右移动光标。
u      撤销上一步修改。连续执行可连续撤销多步。无法撤销已保存的内容。
ZZ     保存并退出。
i      进入输入模式，输入的字符会插入到光标左侧。
a      将光标强制向右移动（光标在行尾也会移动到不存在的空位）并进入输入模式，输入的字符会插入到光标左侧。
I      将光标移动至行首并进入输入模式，输入的字符会插入到光标左侧。
A      将光标强制移动到行尾右侧不存在的空位并进入输入模式，输入的字符会插入到光标左侧。
o      在光标所在行下方插入新行并进入输入模式，输入的字符会插入到光标左侧。
O      在光标所在行上方插入新行并进入输入模式，输入的字符会插入到光标左侧。
s      删除光标所在处字符并进入输入模式，输入的字符会插入到光标左侧。
Esc    退出输入模式。
0      将光标移动至行首。
$      将光标移动至行尾。
gg     将光标移动至第1行。
G      将光标移动至最后1行。
616G   将光标移动至第616行。
x      删除光标所在处字符，并存入剪切板。
616x   删除自光标所在处起的616个字符，并存入剪切板。
       无法跨行。若自光标所在处起直到行尾不足616个字符，则改为执行：删除自光标所在处起直到行尾的内容，并存入剪贴板。
D      删除自光标所在处起直到行尾的内容，并存入剪贴板。
dd     删除光标所在行，并存入剪贴板。
d↑    删除光标所在行及其上一行，并存入剪贴板。
d↓    删除光标所在行及其下一行，并存入剪贴板。
616dd  删除自光标所在行起的616行，并存入剪贴板。
dG     删除光标所在行及其下方所有内容，并存入剪贴板。
Y      复制光标所在行存入剪贴板。
yy     复制光标所在行存入剪贴板。
y↑    复制光标所在行及其上一行存入剪贴板。
y↓    复制光标所在行及其下一行存入剪贴板。
616yy  复制自光标所在行起的616行存入剪贴板。
yG     复制光标所在行及其下方所有内容存入剪贴板。
p      粘贴上一次存入剪贴板的内容至光标所在行下方。
       若上一次存入剪贴板的内容由x/616x/D所创建，则改为执行：粘贴上一次存入剪贴板的内容至光标右侧。
P      粘贴上一次存入剪贴板的内容至光标所在行上方。
       若上一次存入剪贴板的内容由x/616x/D所创建，则改为执行：粘贴上一次存入剪贴板的内容至光标左侧。
r      用接下来输入的第1个字符替换光标所在处的字符。
R      进入替换模式，用输入的字符替换光标所在处的字符。
Esc    退出替换模式。
/      搜索关键词（输入/keyword按回车则搜索关键词keyword）。
n      将光标移动至下一个关键词的位置。
------编辑命令------
以:开头的命令为编辑命令，输入编辑命令后回车执行。编辑命令也属于内部命令。
在宿主目录下的.vimrc文件中（没有的话就新建）写入编辑命令（省略开头的: ）可以使其永久生效。
以后该用户用Vim文本编辑器打开的任意文件都会立即自动执行这些命令。
: set nu                显示行号。
: set nonu              取消显示行号。
: 616                   将光标移动至第616行。
: 616,639d              删除第616至第639行，并存入剪贴板。
: set ic                以后搜索关键词时不区分大小写。
: set noic              以后搜索关键词时区分大小写。
: %s/str1/str2/g        将全文中所有str1字符串替换为str2字符串。str1中可用^或$表示行首或行尾标记。
                        若str2为空，则改为执行：将全文中所有str1字符串删除。
                        若str1为单独的^或$且str2不为空，则改为执行：在所有行首添加str2字符串。
: 616,639s/str1/str2/g  将第616至639行中所有str1字符串替换为str2字符串。str1中可用^或$表示行首或行尾标记。
                        若str2为空，则改为执行：将第616至639行中所有str1字符串删除。
                        若str1为单独的^或$且str2不为空，则改为执行：在第616至639行的所有行首添加str2字符串。
: %s/str1/str2/c        执行: %s/str1/str2/g，但每次替换前询问（y/n/a/q/l/^E/^Y）。
: 616,639s/str1/str2/c  执行: 616,639s/str1/str2/g，但每次替换前询问（y/n/a/q/l/^E/^Y）。
                        上述两条命令执行过程中弹出的询问信息需用键盘回复：
                        按Y键表示替换此处，按N键表示不替换（跳过）此处，按A键表示替换全部。
                        按Q键表示结束替换（跳过全部），按L键表示替换此处并结束替换（跳过全部）。
                        按Ctrl+E表示向上翻页，按Ctrl+Y表示向下翻页。
: x                     保存并退出Vim编辑器。
: q                     退出Vim编辑器，不保存修改。
: q!                    退出Vim编辑器，强制不保存修改。
: w                     保存修改，没有修改也会更新修改时间。
: w param               将当前文件（已修改的）内容另存为param文件。
: wq                    保存并退出Vim编辑器，没有修改也会更新修改时间。
: wq!                   强制保存并退出Vim编辑器（只读文件也会保存）。
                        此命令需要所有者权限或管理员权限才能执行。
: r param               将param文件的所有内容导入当前文件（从光标所在位置开始）。
: !cmdline              执行外部命令cmdline。
                        cmdline是完整的命令行，包含必要的cmd opt param。
                        执行完毕后按回车可回到内部命令。
: r !cmdline            执行外部命令cmdline，并把执行结果导入当前文件（从光标所在位置开始）。
                        cmdline是完整的命令行，包含必要的cmd opt param。
: map △☆ inkey        自定义快捷键。△表示在此处按Ctrl+V，☆表示在此处按要定义的快捷键（可以是组合键）。
                        inkey为快捷键所要触发的内部命令（一串按键序列，Esc键需用<ESC>表示）。
: ab str1 str2          自定义替换字段。接下来在输入模式中输入的所有str1字符串都会在空格或回车后自动替换成str2字符串。

